   0  $accept : program $end

   1  program : PROGRAM ident '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement '.' END_OF_FILE

   2  ident : ID

   3  int_num : INT_NUM

   4  real_num : REAL_NUM

   5  char_val : CHAR_VAL

   6  relop : RELOP

   7  addop : ADDOP

   8  mulop : MULOP

   9  identifier_list : ident
  10                  | identifier_list ',' ident

  11  declarations : declarations VARIABLE identifier_list ':' type ';'
  12               |

  13  type : standard_type
  14       | ARRAY '[' int_num DOTDOT int_num ']' OF standard_type

  15  standard_type : INT_TYPE
  16                | REAL_TYPE
  17                | CHAR_TYPE

  18  subprogram_declarations : subprogram_declarations subprogram_declaration ';'
  19                          |

  20  subprogram_declaration : subprogram_head declarations subprogram_declarations compound_statement

  21  subprogram_head : FUNCTION ident arguments ':' standard_type ';'
  22                  | PROCEDURE ident arguments ';'

  23  arguments : '(' parameter_list ')'
  24            |

  25  parameter_list : identifier_list ':' type
  26                 | parameter_list ';' identifier_list ':' type

  27  compound_statement : BBEGIN optional_statements END

  28  optional_statements : statement_list
  29                      |

  30  statement_list : statement
  31                 | statement_list ';' statement

  32  statement : variable_assignment
  33            | procedure_statement
  34            | compound_statement
  35            | if_statement
  36            | WHILE relop_expression DO statement
  37            | FOR for_assign TO expression DO statement

  38  if_statement : IF relop_expression THEN statement
  39               | IF relop_expression THEN statement ELSE statement

  40  variable_assignment : variable ASSIGNOP expression

  41  for_assign : variable_assignment
  42             | variable

  43  variable : ident
  44           | ident '[' expression ']'

  45  procedure_statement : ident
  46                      | ident '(' expression_list ')'

  47  relop_expression : relop_expression OR relop_and
  48                   | relop_and

  49  relop_and : relop_and AND relop_not
  50            | relop_not

  51  relop_not : NOT relop_not
  52            | relop_paren

  53  relop_paren : '(' relop_expression ')'
  54              | relop_expression_single

  55  relop_expression_single : expression relop expression

  56  expression_list : expression
  57                  | expression_list ',' expression

  58  expression : term
  59             | expression addop term

  60  term : factor
  61       | term mulop factor

  62  factor : ident
  63         | ident '[' expression ']'
  64         | ident '(' expression_list ')'
  65         | int_num
  66         | real_num
  67         | char_val
  68         | sign factor
  69         | '(' expression ')'

  70  sign : ADDOP

state 0
	$accept : . program $end  (0)

	PROGRAM  shift 1
	.  error

	program  goto 2


state 1
	program : PROGRAM . ident '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement '.' END_OF_FILE  (1)

	ID  shift 3
	.  error

	ident  goto 4


state 2
	$accept : program . $end  (0)

	$end  accept


state 3
	ident : ID .  (2)

	.  reduce 2


state 4
	program : PROGRAM ident . '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement '.' END_OF_FILE  (1)

	'('  shift 5
	.  error


state 5
	program : PROGRAM ident '(' . identifier_list ')' ';' declarations subprogram_declarations compound_statement '.' END_OF_FILE  (1)

	ID  shift 3
	.  error

	identifier_list  goto 6
	ident  goto 7


state 6
	program : PROGRAM ident '(' identifier_list . ')' ';' declarations subprogram_declarations compound_statement '.' END_OF_FILE  (1)
	identifier_list : identifier_list . ',' ident  (10)

	')'  shift 8
	','  shift 9
	.  error


state 7
	identifier_list : ident .  (9)

	.  reduce 9


state 8
	program : PROGRAM ident '(' identifier_list ')' . ';' declarations subprogram_declarations compound_statement '.' END_OF_FILE  (1)

	';'  shift 10
	.  error


state 9
	identifier_list : identifier_list ',' . ident  (10)

	ID  shift 3
	.  error

	ident  goto 11


state 10
	program : PROGRAM ident '(' identifier_list ')' ';' . declarations subprogram_declarations compound_statement '.' END_OF_FILE  (1)
	declarations : .  (12)

	.  reduce 12

	declarations  goto 12


state 11
	identifier_list : identifier_list ',' ident .  (10)

	.  reduce 10


state 12
	program : PROGRAM ident '(' identifier_list ')' ';' declarations . subprogram_declarations compound_statement '.' END_OF_FILE  (1)
	declarations : declarations . VARIABLE identifier_list ':' type ';'  (11)
	subprogram_declarations : .  (19)

	VARIABLE  shift 13
	PROCEDURE  reduce 19
	FUNCTION  reduce 19
	BBEGIN  reduce 19

	subprogram_declarations  goto 14


state 13
	declarations : declarations VARIABLE . identifier_list ':' type ';'  (11)

	ID  shift 3
	.  error

	identifier_list  goto 15
	ident  goto 7


state 14
	program : PROGRAM ident '(' identifier_list ')' ';' declarations subprogram_declarations . compound_statement '.' END_OF_FILE  (1)
	subprogram_declarations : subprogram_declarations . subprogram_declaration ';'  (18)

	PROCEDURE  shift 16
	FUNCTION  shift 17
	BBEGIN  shift 18
	.  error

	compound_statement  goto 19
	subprogram_declaration  goto 20
	subprogram_head  goto 21


state 15
	identifier_list : identifier_list . ',' ident  (10)
	declarations : declarations VARIABLE identifier_list . ':' type ';'  (11)

	','  shift 9
	':'  shift 22
	.  error


state 16
	subprogram_head : PROCEDURE . ident arguments ';'  (22)

	ID  shift 3
	.  error

	ident  goto 23


state 17
	subprogram_head : FUNCTION . ident arguments ':' standard_type ';'  (21)

	ID  shift 3
	.  error

	ident  goto 24


state 18
	compound_statement : BBEGIN . optional_statements END  (27)
	optional_statements : .  (29)

	BBEGIN  shift 18
	ID  shift 3
	IF  shift 25
	WHILE  shift 26
	FOR  shift 27
	END  reduce 29

	compound_statement  goto 28
	optional_statements  goto 29
	statement_list  goto 30
	statement  goto 31
	variable_assignment  goto 32
	procedure_statement  goto 33
	if_statement  goto 34
	variable  goto 35
	ident  goto 36


state 19
	program : PROGRAM ident '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement . '.' END_OF_FILE  (1)

	'.'  shift 37
	.  error


state 20
	subprogram_declarations : subprogram_declarations subprogram_declaration . ';'  (18)

	';'  shift 38
	.  error


state 21
	subprogram_declaration : subprogram_head . declarations subprogram_declarations compound_statement  (20)
	declarations : .  (12)

	.  reduce 12

	declarations  goto 39


state 22
	declarations : declarations VARIABLE identifier_list ':' . type ';'  (11)

	INT_TYPE  shift 40
	REAL_TYPE  shift 41
	CHAR_TYPE  shift 42
	ARRAY  shift 43
	.  error

	type  goto 44
	standard_type  goto 45


state 23
	subprogram_head : PROCEDURE ident . arguments ';'  (22)
	arguments : .  (24)

	'('  shift 46
	';'  reduce 24

	arguments  goto 47


state 24
	subprogram_head : FUNCTION ident . arguments ':' standard_type ';'  (21)
	arguments : .  (24)

	'('  shift 46
	':'  reduce 24

	arguments  goto 48


state 25
	if_statement : IF . relop_expression THEN statement  (38)
	if_statement : IF . relop_expression THEN statement ELSE statement  (39)

	INT_NUM  shift 49
	REAL_NUM  shift 50
	CHAR_VAL  shift 51
	ID  shift 3
	NOT  shift 52
	ADDOP  shift 53
	'('  shift 54
	.  error

	relop_expression  goto 55
	relop_and  goto 56
	relop_not  goto 57
	relop_paren  goto 58
	relop_expression_single  goto 59
	expression  goto 60
	term  goto 61
	factor  goto 62
	sign  goto 63
	ident  goto 64
	int_num  goto 65
	real_num  goto 66
	char_val  goto 67


state 26
	statement : WHILE . relop_expression DO statement  (36)

	INT_NUM  shift 49
	REAL_NUM  shift 50
	CHAR_VAL  shift 51
	ID  shift 3
	NOT  shift 52
	ADDOP  shift 53
	'('  shift 54
	.  error

	relop_expression  goto 68
	relop_and  goto 56
	relop_not  goto 57
	relop_paren  goto 58
	relop_expression_single  goto 59
	expression  goto 60
	term  goto 61
	factor  goto 62
	sign  goto 63
	ident  goto 64
	int_num  goto 65
	real_num  goto 66
	char_val  goto 67


state 27
	statement : FOR . for_assign TO expression DO statement  (37)

	ID  shift 3
	.  error

	variable_assignment  goto 69
	for_assign  goto 70
	variable  goto 71
	ident  goto 72


state 28
	statement : compound_statement .  (34)

	.  reduce 34


state 29
	compound_statement : BBEGIN optional_statements . END  (27)

	END  shift 73
	.  error


state 30
	optional_statements : statement_list .  (28)
	statement_list : statement_list . ';' statement  (31)

	';'  shift 74
	END  reduce 28


state 31
	statement_list : statement .  (30)

	.  reduce 30


state 32
	statement : variable_assignment .  (32)

	.  reduce 32


state 33
	statement : procedure_statement .  (33)

	.  reduce 33


state 34
	statement : if_statement .  (35)

	.  reduce 35


state 35
	variable_assignment : variable . ASSIGNOP expression  (40)

	ASSIGNOP  shift 75
	.  error


state 36
	variable : ident .  (43)
	variable : ident . '[' expression ']'  (44)
	procedure_statement : ident .  (45)
	procedure_statement : ident . '(' expression_list ')'  (46)

	'('  shift 76
	'['  shift 77
	END  reduce 45
	ELSE  reduce 45
	ASSIGNOP  reduce 43
	';'  reduce 45


state 37
	program : PROGRAM ident '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement '.' . END_OF_FILE  (1)

	END_OF_FILE  shift 78
	.  error


state 38
	subprogram_declarations : subprogram_declarations subprogram_declaration ';' .  (18)

	.  reduce 18


state 39
	declarations : declarations . VARIABLE identifier_list ':' type ';'  (11)
	subprogram_declaration : subprogram_head declarations . subprogram_declarations compound_statement  (20)
	subprogram_declarations : .  (19)

	VARIABLE  shift 13
	PROCEDURE  reduce 19
	FUNCTION  reduce 19
	BBEGIN  reduce 19

	subprogram_declarations  goto 79


state 40
	standard_type : INT_TYPE .  (15)

	.  reduce 15


state 41
	standard_type : REAL_TYPE .  (16)

	.  reduce 16


state 42
	standard_type : CHAR_TYPE .  (17)

	.  reduce 17


state 43
	type : ARRAY . '[' int_num DOTDOT int_num ']' OF standard_type  (14)

	'['  shift 80
	.  error


state 44
	declarations : declarations VARIABLE identifier_list ':' type . ';'  (11)

	';'  shift 81
	.  error


state 45
	type : standard_type .  (13)

	.  reduce 13


state 46
	arguments : '(' . parameter_list ')'  (23)

	ID  shift 3
	.  error

	identifier_list  goto 82
	parameter_list  goto 83
	ident  goto 7


state 47
	subprogram_head : PROCEDURE ident arguments . ';'  (22)

	';'  shift 84
	.  error


state 48
	subprogram_head : FUNCTION ident arguments . ':' standard_type ';'  (21)

	':'  shift 85
	.  error


state 49
	int_num : INT_NUM .  (3)

	.  reduce 3


state 50
	real_num : REAL_NUM .  (4)

	.  reduce 4


state 51
	char_val : CHAR_VAL .  (5)

	.  reduce 5


state 52
	relop_not : NOT . relop_not  (51)

	INT_NUM  shift 49
	REAL_NUM  shift 50
	CHAR_VAL  shift 51
	ID  shift 3
	NOT  shift 52
	ADDOP  shift 53
	'('  shift 54
	.  error

	relop_not  goto 86
	relop_paren  goto 58
	relop_expression_single  goto 59
	expression  goto 60
	term  goto 61
	factor  goto 62
	sign  goto 63
	ident  goto 64
	int_num  goto 65
	real_num  goto 66
	char_val  goto 67


state 53
	sign : ADDOP .  (70)

	.  reduce 70


state 54
	relop_paren : '(' . relop_expression ')'  (53)
	factor : '(' . expression ')'  (69)

	INT_NUM  shift 49
	REAL_NUM  shift 50
	CHAR_VAL  shift 51
	ID  shift 3
	NOT  shift 52
	ADDOP  shift 53
	'('  shift 54
	.  error

	relop_expression  goto 87
	relop_and  goto 56
	relop_not  goto 57
	relop_paren  goto 58
	relop_expression_single  goto 59
	expression  goto 88
	term  goto 61
	factor  goto 62
	sign  goto 63
	ident  goto 64
	int_num  goto 65
	real_num  goto 66
	char_val  goto 67


state 55
	if_statement : IF relop_expression . THEN statement  (38)
	if_statement : IF relop_expression . THEN statement ELSE statement  (39)
	relop_expression : relop_expression . OR relop_and  (47)

	THEN  shift 89
	OR  shift 90
	.  error


state 56
	relop_expression : relop_and .  (48)
	relop_and : relop_and . AND relop_not  (49)

	AND  shift 91
	THEN  reduce 48
	DO  reduce 48
	OR  reduce 48
	')'  reduce 48


state 57
	relop_and : relop_not .  (50)

	.  reduce 50


state 58
	relop_not : relop_paren .  (52)

	.  reduce 52


state 59
	relop_paren : relop_expression_single .  (54)

	.  reduce 54


state 60
	relop_expression_single : expression . relop expression  (55)
	expression : expression . addop term  (59)

	RELOP  shift 92
	ADDOP  shift 93
	.  error

	relop  goto 94
	addop  goto 95


state 61
	expression : term .  (58)
	term : term . mulop factor  (61)

	MULOP  shift 96
	END  reduce 58
	THEN  reduce 58
	ELSE  reduce 58
	DO  reduce 58
	TO  reduce 58
	RELOP  reduce 58
	ADDOP  reduce 58
	OR  reduce 58
	AND  reduce 58
	')'  reduce 58
	';'  reduce 58
	','  reduce 58
	']'  reduce 58

	mulop  goto 97


state 62
	term : factor .  (60)

	.  reduce 60


state 63
	factor : sign . factor  (68)

	INT_NUM  shift 49
	REAL_NUM  shift 50
	CHAR_VAL  shift 51
	ID  shift 3
	ADDOP  shift 53
	'('  shift 98
	.  error

	factor  goto 99
	sign  goto 63
	ident  goto 64
	int_num  goto 65
	real_num  goto 66
	char_val  goto 67


state 64
	factor : ident .  (62)
	factor : ident . '[' expression ']'  (63)
	factor : ident . '(' expression_list ')'  (64)

	'('  shift 100
	'['  shift 101
	END  reduce 62
	THEN  reduce 62
	ELSE  reduce 62
	DO  reduce 62
	TO  reduce 62
	RELOP  reduce 62
	ADDOP  reduce 62
	OR  reduce 62
	MULOP  reduce 62
	AND  reduce 62
	')'  reduce 62
	';'  reduce 62
	','  reduce 62
	']'  reduce 62


state 65
	factor : int_num .  (65)

	.  reduce 65


state 66
	factor : real_num .  (66)

	.  reduce 66


state 67
	factor : char_val .  (67)

	.  reduce 67


state 68
	statement : WHILE relop_expression . DO statement  (36)
	relop_expression : relop_expression . OR relop_and  (47)

	DO  shift 102
	OR  shift 90
	.  error


state 69
	for_assign : variable_assignment .  (41)

	.  reduce 41


state 70
	statement : FOR for_assign . TO expression DO statement  (37)

	TO  shift 103
	.  error


state 71
	variable_assignment : variable . ASSIGNOP expression  (40)
	for_assign : variable .  (42)

	ASSIGNOP  shift 75
	TO  reduce 42


state 72
	variable : ident .  (43)
	variable : ident . '[' expression ']'  (44)

	'['  shift 77
	TO  reduce 43
	ASSIGNOP  reduce 43


state 73
	compound_statement : BBEGIN optional_statements END .  (27)

	.  reduce 27


state 74
	statement_list : statement_list ';' . statement  (31)

	BBEGIN  shift 18
	ID  shift 3
	IF  shift 25
	WHILE  shift 26
	FOR  shift 27
	.  error

	compound_statement  goto 28
	statement  goto 104
	variable_assignment  goto 32
	procedure_statement  goto 33
	if_statement  goto 34
	variable  goto 35
	ident  goto 36


state 75
	variable_assignment : variable ASSIGNOP . expression  (40)

	INT_NUM  shift 49
	REAL_NUM  shift 50
	CHAR_VAL  shift 51
	ID  shift 3
	ADDOP  shift 53
	'('  shift 98
	.  error

	expression  goto 105
	term  goto 61
	factor  goto 62
	sign  goto 63
	ident  goto 64
	int_num  goto 65
	real_num  goto 66
	char_val  goto 67


state 76
	procedure_statement : ident '(' . expression_list ')'  (46)

	INT_NUM  shift 49
	REAL_NUM  shift 50
	CHAR_VAL  shift 51
	ID  shift 3
	ADDOP  shift 53
	'('  shift 98
	.  error

	expression_list  goto 106
	expression  goto 107
	term  goto 61
	factor  goto 62
	sign  goto 63
	ident  goto 64
	int_num  goto 65
	real_num  goto 66
	char_val  goto 67


state 77
	variable : ident '[' . expression ']'  (44)

	INT_NUM  shift 49
	REAL_NUM  shift 50
	CHAR_VAL  shift 51
	ID  shift 3
	ADDOP  shift 53
	'('  shift 98
	.  error

	expression  goto 108
	term  goto 61
	factor  goto 62
	sign  goto 63
	ident  goto 64
	int_num  goto 65
	real_num  goto 66
	char_val  goto 67


state 78
	program : PROGRAM ident '(' identifier_list ')' ';' declarations subprogram_declarations compound_statement '.' END_OF_FILE .  (1)

	.  reduce 1


state 79
	subprogram_declarations : subprogram_declarations . subprogram_declaration ';'  (18)
	subprogram_declaration : subprogram_head declarations subprogram_declarations . compound_statement  (20)

	PROCEDURE  shift 16
	FUNCTION  shift 17
	BBEGIN  shift 18
	.  error

	compound_statement  goto 109
	subprogram_declaration  goto 20
	subprogram_head  goto 21


state 80
	type : ARRAY '[' . int_num DOTDOT int_num ']' OF standard_type  (14)

	INT_NUM  shift 49
	.  error

	int_num  goto 110


state 81
	declarations : declarations VARIABLE identifier_list ':' type ';' .  (11)

	.  reduce 11


state 82
	identifier_list : identifier_list . ',' ident  (10)
	parameter_list : identifier_list . ':' type  (25)

	','  shift 9
	':'  shift 111
	.  error


state 83
	arguments : '(' parameter_list . ')'  (23)
	parameter_list : parameter_list . ';' identifier_list ':' type  (26)

	')'  shift 112
	';'  shift 113
	.  error


state 84
	subprogram_head : PROCEDURE ident arguments ';' .  (22)

	.  reduce 22


state 85
	subprogram_head : FUNCTION ident arguments ':' . standard_type ';'  (21)

	INT_TYPE  shift 40
	REAL_TYPE  shift 41
	CHAR_TYPE  shift 42
	.  error

	standard_type  goto 114


state 86
	relop_not : NOT relop_not .  (51)

	.  reduce 51


state 87
	relop_expression : relop_expression . OR relop_and  (47)
	relop_paren : '(' relop_expression . ')'  (53)

	OR  shift 90
	')'  shift 115
	.  error


state 88
	relop_expression_single : expression . relop expression  (55)
	expression : expression . addop term  (59)
	factor : '(' expression . ')'  (69)

	RELOP  shift 92
	ADDOP  shift 93
	')'  shift 116
	.  error

	relop  goto 94
	addop  goto 95


state 89
	if_statement : IF relop_expression THEN . statement  (38)
	if_statement : IF relop_expression THEN . statement ELSE statement  (39)

	BBEGIN  shift 18
	ID  shift 3
	IF  shift 25
	WHILE  shift 26
	FOR  shift 27
	.  error

	compound_statement  goto 28
	statement  goto 117
	variable_assignment  goto 32
	procedure_statement  goto 33
	if_statement  goto 34
	variable  goto 35
	ident  goto 36


state 90
	relop_expression : relop_expression OR . relop_and  (47)

	INT_NUM  shift 49
	REAL_NUM  shift 50
	CHAR_VAL  shift 51
	ID  shift 3
	NOT  shift 52
	ADDOP  shift 53
	'('  shift 54
	.  error

	relop_and  goto 118
	relop_not  goto 57
	relop_paren  goto 58
	relop_expression_single  goto 59
	expression  goto 60
	term  goto 61
	factor  goto 62
	sign  goto 63
	ident  goto 64
	int_num  goto 65
	real_num  goto 66
	char_val  goto 67


state 91
	relop_and : relop_and AND . relop_not  (49)

	INT_NUM  shift 49
	REAL_NUM  shift 50
	CHAR_VAL  shift 51
	ID  shift 3
	NOT  shift 52
	ADDOP  shift 53
	'('  shift 54
	.  error

	relop_not  goto 119
	relop_paren  goto 58
	relop_expression_single  goto 59
	expression  goto 60
	term  goto 61
	factor  goto 62
	sign  goto 63
	ident  goto 64
	int_num  goto 65
	real_num  goto 66
	char_val  goto 67


state 92
	relop : RELOP .  (6)

	.  reduce 6


state 93
	addop : ADDOP .  (7)

	.  reduce 7


state 94
	relop_expression_single : expression relop . expression  (55)

	INT_NUM  shift 49
	REAL_NUM  shift 50
	CHAR_VAL  shift 51
	ID  shift 3
	ADDOP  shift 53
	'('  shift 98
	.  error

	expression  goto 120
	term  goto 61
	factor  goto 62
	sign  goto 63
	ident  goto 64
	int_num  goto 65
	real_num  goto 66
	char_val  goto 67


state 95
	expression : expression addop . term  (59)

	INT_NUM  shift 49
	REAL_NUM  shift 50
	CHAR_VAL  shift 51
	ID  shift 3
	ADDOP  shift 53
	'('  shift 98
	.  error

	term  goto 121
	factor  goto 62
	sign  goto 63
	ident  goto 64
	int_num  goto 65
	real_num  goto 66
	char_val  goto 67


state 96
	mulop : MULOP .  (8)

	.  reduce 8


state 97
	term : term mulop . factor  (61)

	INT_NUM  shift 49
	REAL_NUM  shift 50
	CHAR_VAL  shift 51
	ID  shift 3
	ADDOP  shift 53
	'('  shift 98
	.  error

	factor  goto 122
	sign  goto 63
	ident  goto 64
	int_num  goto 65
	real_num  goto 66
	char_val  goto 67


state 98
	factor : '(' . expression ')'  (69)

	INT_NUM  shift 49
	REAL_NUM  shift 50
	CHAR_VAL  shift 51
	ID  shift 3
	ADDOP  shift 53
	'('  shift 98
	.  error

	expression  goto 123
	term  goto 61
	factor  goto 62
	sign  goto 63
	ident  goto 64
	int_num  goto 65
	real_num  goto 66
	char_val  goto 67


state 99
	factor : sign factor .  (68)

	.  reduce 68


state 100
	factor : ident '(' . expression_list ')'  (64)

	INT_NUM  shift 49
	REAL_NUM  shift 50
	CHAR_VAL  shift 51
	ID  shift 3
	ADDOP  shift 53
	'('  shift 98
	.  error

	expression_list  goto 124
	expression  goto 107
	term  goto 61
	factor  goto 62
	sign  goto 63
	ident  goto 64
	int_num  goto 65
	real_num  goto 66
	char_val  goto 67


state 101
	factor : ident '[' . expression ']'  (63)

	INT_NUM  shift 49
	REAL_NUM  shift 50
	CHAR_VAL  shift 51
	ID  shift 3
	ADDOP  shift 53
	'('  shift 98
	.  error

	expression  goto 125
	term  goto 61
	factor  goto 62
	sign  goto 63
	ident  goto 64
	int_num  goto 65
	real_num  goto 66
	char_val  goto 67


state 102
	statement : WHILE relop_expression DO . statement  (36)

	BBEGIN  shift 18
	ID  shift 3
	IF  shift 25
	WHILE  shift 26
	FOR  shift 27
	.  error

	compound_statement  goto 28
	statement  goto 126
	variable_assignment  goto 32
	procedure_statement  goto 33
	if_statement  goto 34
	variable  goto 35
	ident  goto 36


state 103
	statement : FOR for_assign TO . expression DO statement  (37)

	INT_NUM  shift 49
	REAL_NUM  shift 50
	CHAR_VAL  shift 51
	ID  shift 3
	ADDOP  shift 53
	'('  shift 98
	.  error

	expression  goto 127
	term  goto 61
	factor  goto 62
	sign  goto 63
	ident  goto 64
	int_num  goto 65
	real_num  goto 66
	char_val  goto 67


state 104
	statement_list : statement_list ';' statement .  (31)

	.  reduce 31


state 105
	variable_assignment : variable ASSIGNOP expression .  (40)
	expression : expression . addop term  (59)

	ADDOP  shift 93
	END  reduce 40
	ELSE  reduce 40
	TO  reduce 40
	';'  reduce 40

	addop  goto 95


state 106
	procedure_statement : ident '(' expression_list . ')'  (46)
	expression_list : expression_list . ',' expression  (57)

	')'  shift 128
	','  shift 129
	.  error


state 107
	expression_list : expression .  (56)
	expression : expression . addop term  (59)

	ADDOP  shift 93
	')'  reduce 56
	','  reduce 56

	addop  goto 95


state 108
	variable : ident '[' expression . ']'  (44)
	expression : expression . addop term  (59)

	ADDOP  shift 93
	']'  shift 130
	.  error

	addop  goto 95


state 109
	subprogram_declaration : subprogram_head declarations subprogram_declarations compound_statement .  (20)

	.  reduce 20


state 110
	type : ARRAY '[' int_num . DOTDOT int_num ']' OF standard_type  (14)

	DOTDOT  shift 131
	.  error


state 111
	parameter_list : identifier_list ':' . type  (25)

	INT_TYPE  shift 40
	REAL_TYPE  shift 41
	CHAR_TYPE  shift 42
	ARRAY  shift 43
	.  error

	type  goto 132
	standard_type  goto 45


state 112
	arguments : '(' parameter_list ')' .  (23)

	.  reduce 23


state 113
	parameter_list : parameter_list ';' . identifier_list ':' type  (26)

	ID  shift 3
	.  error

	identifier_list  goto 133
	ident  goto 7


state 114
	subprogram_head : FUNCTION ident arguments ':' standard_type . ';'  (21)

	';'  shift 134
	.  error


state 115
	relop_paren : '(' relop_expression ')' .  (53)

	.  reduce 53


state 116
	factor : '(' expression ')' .  (69)

	.  reduce 69


state 117
	if_statement : IF relop_expression THEN statement .  (38)
	if_statement : IF relop_expression THEN statement . ELSE statement  (39)

	ELSE  shift 135
	END  reduce 38
	';'  reduce 38


state 118
	relop_expression : relop_expression OR relop_and .  (47)
	relop_and : relop_and . AND relop_not  (49)

	AND  shift 91
	THEN  reduce 47
	DO  reduce 47
	OR  reduce 47
	')'  reduce 47


state 119
	relop_and : relop_and AND relop_not .  (49)

	.  reduce 49


state 120
	relop_expression_single : expression relop expression .  (55)
	expression : expression . addop term  (59)

	ADDOP  shift 93
	THEN  reduce 55
	DO  reduce 55
	OR  reduce 55
	AND  reduce 55
	')'  reduce 55

	addop  goto 95


state 121
	expression : expression addop term .  (59)
	term : term . mulop factor  (61)

	MULOP  shift 96
	END  reduce 59
	THEN  reduce 59
	ELSE  reduce 59
	DO  reduce 59
	TO  reduce 59
	RELOP  reduce 59
	ADDOP  reduce 59
	OR  reduce 59
	AND  reduce 59
	')'  reduce 59
	';'  reduce 59
	','  reduce 59
	']'  reduce 59

	mulop  goto 97


state 122
	term : term mulop factor .  (61)

	.  reduce 61


state 123
	expression : expression . addop term  (59)
	factor : '(' expression . ')'  (69)

	ADDOP  shift 93
	')'  shift 116
	.  error

	addop  goto 95


state 124
	expression_list : expression_list . ',' expression  (57)
	factor : ident '(' expression_list . ')'  (64)

	')'  shift 136
	','  shift 129
	.  error


state 125
	expression : expression . addop term  (59)
	factor : ident '[' expression . ']'  (63)

	ADDOP  shift 93
	']'  shift 137
	.  error

	addop  goto 95


state 126
	statement : WHILE relop_expression DO statement .  (36)

	.  reduce 36


state 127
	statement : FOR for_assign TO expression . DO statement  (37)
	expression : expression . addop term  (59)

	DO  shift 138
	ADDOP  shift 93
	.  error

	addop  goto 95


state 128
	procedure_statement : ident '(' expression_list ')' .  (46)

	.  reduce 46


state 129
	expression_list : expression_list ',' . expression  (57)

	INT_NUM  shift 49
	REAL_NUM  shift 50
	CHAR_VAL  shift 51
	ID  shift 3
	ADDOP  shift 53
	'('  shift 98
	.  error

	expression  goto 139
	term  goto 61
	factor  goto 62
	sign  goto 63
	ident  goto 64
	int_num  goto 65
	real_num  goto 66
	char_val  goto 67


state 130
	variable : ident '[' expression ']' .  (44)

	.  reduce 44


state 131
	type : ARRAY '[' int_num DOTDOT . int_num ']' OF standard_type  (14)

	INT_NUM  shift 49
	.  error

	int_num  goto 140


state 132
	parameter_list : identifier_list ':' type .  (25)

	.  reduce 25


state 133
	identifier_list : identifier_list . ',' ident  (10)
	parameter_list : parameter_list ';' identifier_list . ':' type  (26)

	','  shift 9
	':'  shift 141
	.  error


state 134
	subprogram_head : FUNCTION ident arguments ':' standard_type ';' .  (21)

	.  reduce 21


state 135
	if_statement : IF relop_expression THEN statement ELSE . statement  (39)

	BBEGIN  shift 18
	ID  shift 3
	IF  shift 25
	WHILE  shift 26
	FOR  shift 27
	.  error

	compound_statement  goto 28
	statement  goto 142
	variable_assignment  goto 32
	procedure_statement  goto 33
	if_statement  goto 34
	variable  goto 35
	ident  goto 36


state 136
	factor : ident '(' expression_list ')' .  (64)

	.  reduce 64


state 137
	factor : ident '[' expression ']' .  (63)

	.  reduce 63


state 138
	statement : FOR for_assign TO expression DO . statement  (37)

	BBEGIN  shift 18
	ID  shift 3
	IF  shift 25
	WHILE  shift 26
	FOR  shift 27
	.  error

	compound_statement  goto 28
	statement  goto 143
	variable_assignment  goto 32
	procedure_statement  goto 33
	if_statement  goto 34
	variable  goto 35
	ident  goto 36


state 139
	expression_list : expression_list ',' expression .  (57)
	expression : expression . addop term  (59)

	ADDOP  shift 93
	')'  reduce 57
	','  reduce 57

	addop  goto 95


state 140
	type : ARRAY '[' int_num DOTDOT int_num . ']' OF standard_type  (14)

	']'  shift 144
	.  error


state 141
	parameter_list : parameter_list ';' identifier_list ':' . type  (26)

	INT_TYPE  shift 40
	REAL_TYPE  shift 41
	CHAR_TYPE  shift 42
	ARRAY  shift 43
	.  error

	type  goto 145
	standard_type  goto 45


state 142
	if_statement : IF relop_expression THEN statement ELSE statement .  (39)

	.  reduce 39


state 143
	statement : FOR for_assign TO expression DO statement .  (37)

	.  reduce 37


state 144
	type : ARRAY '[' int_num DOTDOT int_num ']' . OF standard_type  (14)

	OF  shift 146
	.  error


state 145
	parameter_list : parameter_list ';' identifier_list ':' type .  (26)

	.  reduce 26


state 146
	type : ARRAY '[' int_num DOTDOT int_num ']' OF . standard_type  (14)

	INT_TYPE  shift 40
	REAL_TYPE  shift 41
	CHAR_TYPE  shift 42
	.  error

	standard_type  goto 147


state 147
	type : ARRAY '[' int_num DOTDOT int_num ']' OF standard_type .  (14)

	.  reduce 14


58 terminals, 37 nonterminals
71 grammar rules, 148 states
